#include <stdio.h>
#include <math.h>

#define ALPHABET_SIZE 25  // 26 letters minus 1 for I/J combination

// Function to calculate the factorial of a number
unsigned long long factorial(int n) {
    unsigned long long result = 1;
    for (int i = 2; i <= n; i++) {
        result *= i;
    }
    return result;
}

int main() {
    unsigned long long permutations = factorial(ALPHABET_SIZE);
    double log2_permutations = log2((double)permutations);

    printf("Number of possible keys (permutations of 25 letters): %llu\n", permutations);
    printf("Approximate power of 2: 2^%.2f\n", log2_permutations);

    return 0;
}
OUTPUT:
#include <stdio.h>
#include <math.h>

#define ALPHABET_SIZE 25  // 26 letters minus 1 for I/J combination

// Function to calculate the factorial of a number
unsigned long long factorial(int n) {
    unsigned long long result = 1;
    for (int i = 2; i <= n; i++) {
        result *= i;
    }
    return result;
}

int main() {
    unsigned long long permutations = factorial(ALPHABET_SIZE);
    double log2_permutations = log2((double)permutations);

    printf("Number of possible keys (permutations of 25 letters): %llu\n", permutations);
    printf("Approximate power of 2: 2^%.2f\n", log2_permutations);

    return 0;
}
